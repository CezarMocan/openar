/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Market } from "../Market";

export class Market__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wn: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(_wn, overrides || {}) as Promise<Market>;
  }
  getDeployTransaction(
    _wn: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wn, overrides || {});
  }
  attach(address: string): Market {
    return super.attach(address) as Market;
  }
  connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wn",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "AskRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "BidRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "BidShareUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesCreator",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IMarket.PlatformCuts",
        name: "platformCuts",
        type: "tuple",
      },
    ],
    name: "PlatformCutsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "expectedBid",
        type: "tuple",
      },
    ],
    name: "acceptBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "bidForTokenBidder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bidSharesForToken",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mediaContractAddress",
        type: "address",
      },
    ],
    name: "configure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "configureEnforcePlatformCuts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "configurePausedUnpaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "platformAddress",
        type: "address",
      },
    ],
    name: "configurePlatformAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "firstSalePool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPlatform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesPool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "furtherSalesCreator",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.PlatformCuts",
        name: "pCuts",
        type: "tuple",
      },
    ],
    name: "configurePlatformCuts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "openARPoolAddress",
        type: "address",
      },
    ],
    name: "configurePoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "currentAskForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enforcePlatformCuts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "isValidBid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "isValidBidShares",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mediaContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openARPlatform",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openARPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformCuts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "firstSalePlatform",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "firstSalePool",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "furtherSalesPlatform",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "furtherSalesPool",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "furtherSalesCreator",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "removeAskForBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "removeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "setAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "setAskForBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "sellOnShare",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "setBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "platform",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "pool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "creator",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "owner",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.D256",
            name: "prevOwner",
            type: "tuple",
          },
        ],
        internalType: "struct IMarket.BidShares",
        name: "bidShares",
        type: "tuple",
      },
    ],
    name: "setBidShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Ask",
        name: "ask",
        type: "tuple",
      },
    ],
    name: "setInitialAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.D256",
        name: "sharePercentage",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "splitShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeCoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526004805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040516200429f3803806200429f83398101604081905262000047916200010e565b60016000908155620000616001600160e01b036200010a16565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600a8054610100600160a81b0319166101006001600160a01b03841602179055620000d96200010a565b600b80546001600160a01b0319166001600160a01b039290921691909117905550600a805460ff191690556200013e565b3390565b60006020828403121562000120578081fd5b81516001600160a01b038116811462000137578182fd5b9392505050565b614151806200014e6000396000f3fe6080604052600436106101d15760003560e01c806390c3022f116100f7578063d8661b0311610095578063f62c8c9f11610064578063f62c8c9f1461051b578063f8838c1214610530578063f9ce058214610550578063fe58edda1461057d576101d8565b8063d8661b031461049b578063de0cb167146104bb578063e9b35ad8146104db578063f2fde38b146104fb576101d8565b8063ad827dc4116100d1578063ad827dc414610401578063b320f4591461042e578063b920c1231461044e578063ba3393991461047b576101d8565b806390c3022f146103b7578063919914fb146103d7578063a2e30370146103ec576101d8565b806362f24b701161016f57806385efa19b1161013e57806385efa19b1461033c5780638861d687146103625780638afc00fd146103825780638da5cb5b146103a2576101d8565b806362f24b70146102c7578063715018a6146102e757806375cb2672146102fc5780637f3e490c1461031c576101d8565b806328220f35116101ab57806328220f35146102525780634e21f9c014610272578063578064f6146102875780635bf62422146102b4576101d8565b806302e8fe13146101da57806310348b501461021057806311cc1ad614610230576101d8565b366101d857005b005b3480156101e657600080fd5b506101fa6101f5366004613368565b61059d565b60405161020791906133f6565b60405180910390f35b34801561021c57600080fd5b506101d861022b3660046130c9565b610655565b34801561023c57600080fd5b506102456107a8565b60405161020791906133a5565b34801561025e57600080fd5b506101d861026d3660046131f4565b6107bc565b34801561027e57600080fd5b506102456108ae565b34801561029357600080fd5b506102a76102a23660046131f4565b6108bd565b6040516102079190613f04565b6101d86102c23660046132d8565b6108f8565b3480156102d357600080fd5b506101d86102e2366004613253565b610e71565b3480156102f357600080fd5b506101d8610f4c565b34801561030857600080fd5b506101d8610317366004613025565b610fd5565b34801561032857600080fd5b506101d861033736600461327f565b61107f565b34801561034857600080fd5b50610351611218565b60405161020795949392919061400b565b34801561036e57600080fd5b506101d861037d366004613025565b611261565b34801561038e57600080fd5b506101fa61039d366004613177565b61130b565b3480156103ae57600080fd5b506102456113f0565b3480156103c357600080fd5b506101d86103d23660046131af565b6113ff565b3480156103e357600080fd5b506101fa6116bd565b3480156103f857600080fd5b506102456116cd565b34801561040d57600080fd5b5061042161041c366004613224565b6116dc565b6040516102079190613f81565b34801561043a57600080fd5b506101d86104493660046131f4565b611752565b34801561045a57600080fd5b5061046e6104693660046131ca565b611828565b6040516102079190614062565b34801561048757600080fd5b506101d86104963660046132a2565b61184c565b3480156104a757600080fd5b506101d86104b6366004613253565b611b31565b3480156104c757600080fd5b506101d86104d6366004613025565b611b93565b3480156104e757600080fd5b506101d86104f636600461305d565b611c3d565b34801561050757600080fd5b506101d8610516366004613025565b611d59565b34801561052757600080fd5b50610245611e1a565b34801561053c57600080fd5b506101fa61054b366004613177565b611e29565b34801561055c57600080fd5b5061057061056b3660046131f4565b611eb1565b6040516102079190613f42565b34801561058957600080fd5b506101fa6105983660046131af565b611f2c565b60006105a7612e93565b6105b084611eb1565b90506105bb81611f2c565b6105e05760405162461bcd60e51b81526004016105d790613bd9565b60405180910390fd5b821580159061064b57506106486105fb826060015185611828565b61063c61060c846080015187611828565b61063c61061d866020015189611828565b61063c61062e88600001518b611828565b61063c89604001518c611828565b9063ffffffff611f8316565b83145b9150505b92915050565b600a5460ff16156106785760405162461bcd60e51b81526004016105d79061379a565b6002600054141561069b5760405162461bcd60e51b81526004016105d790613d8c565b600260009081555b825181101561076c576002546001600160a01b031663430c20816106c5611fa8565b8584815181106106d157fe5b60200260200101516040518363ffffffff1660e01b81526004016106f69291906133b9565b602060405180830381600087803b15801561071057600080fd5b505af1158015610724573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107489190613193565b6107645760405162461bcd60e51b81526004016105d790613cac565b6001016106a3565b5060005b825181101561079e5761079683828151811061078857fe5b602002602001015183611fac565b600101610770565b5050600160005550565b600a5461010090046001600160a01b031681565b600a5460ff16156107df5760405162461bcd60e51b81526004016105d79061379a565b6107e7611fa8565b60025482906001600160a01b0383811691161480610884575060025460405163430c208160e01b81526001600160a01b039091169063430c20819061083290859085906004016133b9565b602060405180830381600087803b15801561084c57600080fd5b505af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190613193565b6108a05760405162461bcd60e51b81526004016105d79061393d565b6108a983612060565b505050565b6002546001600160a01b031681565b6108c5612edf565b506000908152600e6020908152604091829020825180840190935280548352600101546001600160a01b03169082015290565b600a5460ff161561091b5760405162461bcd60e51b81526004016105d79061379a565b6002546040516314d43c8d60e11b815283916001600160a01b0316906329a8791a9061094b908490600401614062565b602060405180830381600087803b15801561096557600080fd5b505af1158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190613193565b6109b95760405162461bcd60e51b81526004016105d790613dc3565b6109c1611fa8565b6001600160a01b031682604001516001600160a01b0316146109f55760405162461bcd60e51b81526004016105d790613e6a565b60408201516001600160a01b0316610a1f5760405162461bcd60e51b81526004016105d79061350c565b8151610a3d5760405162461bcd60e51b81526004016105d790613763565b60608201516001600160a01b0316610a675760405162461bcd60e51b81526004016105d790613cf9565b610a6f612e93565b506000838152600d6020908152604091829020825160c081018452815460a0820190815281528351808401855260018301548152818401528351808401855260028301548152818501528351808401855260038301548152606082015283519283019093526004015481526080820152610af86064670de0b6b3a764000063ffffffff6120ce16565b608084015151602083015151835151604085015151610b25939261063c929091839163ffffffff611f8316565b1115610b435760405162461bcd60e51b81526004016105d790613b88565b600454600160a01b900460ff161580610b9a5750610b706064670de0b6b3a764000063ffffffff6120ce16565b608084015151600954600854600754610b97939261063c929091839163ffffffff611f8316565b11155b610bb65760405162461bcd60e51b81526004016105d79061387e565b610bbe612ef6565b506000848152600c60209081526040808320868201516001600160a01b03908116855290835292819020815160a08101835281548152600182015485168185015260028201548516818401526003820154909416606085015281519283019091526004015481526080820152805115610c3f57610c3f846040015186612108565b6000610c5385600001518660200151612238565b90506040518060a0016040528082815260200186602001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001516001600160a01b031681526020018660800151815250600c6000888152602001908152602001600020600087604001516001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550608082015181600401600082015181600001555050905050857f327bc9021bfbee403a11b13dd6c819999006aff090cc129f07e9f2840af38dd5600c6000898152602001908152602001600020600088604001516001600160a01b03166001600160a01b03168152602001908152602001600020604051610df39190613fca565b60405180910390a26000868152600e602052604090205415801590610e3b57506000868152600e6020908152604090912060010154908601516001600160a01b039081169116145b8015610e5657506000868152600e6020526040902054855110155b15610e6957610e69868660400151612435565b505050505050565b600a5460ff1615610e945760405162461bcd60e51b81526004016105d79061379a565b610e9c611fa8565b60025460405163430c208160e01b815284916001600160a01b03169063430c208190610ece90859085906004016133b9565b602060405180830381600087803b158015610ee857600080fd5b505af1158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f209190613193565b610f3c5760405162461bcd60e51b81526004016105d790613906565b610f468484611fac565b50505050565b610f54611fa8565b6001600160a01b0316610f656113f0565b6001600160a01b031614610f8b5760405162461bcd60e51b81526004016105d790613aa1565b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b610fdd611fa8565b6001600160a01b0316610fee6113f0565b6001600160a01b0316146110145760405162461bcd60e51b81526004016105d790613aa1565b600a5460ff16156110375760405162461bcd60e51b81526004016105d79061379a565b6001600160a01b03811661105d5760405162461bcd60e51b81526004016105d790613eb3565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600a5460ff16156110a25760405162461bcd60e51b81526004016105d79061379a565b6110aa611fa8565b6002546001600160a01b039081169116146110d75760405162461bcd60e51b81526004016105d790613a02565b600454600160a01b900460ff16156111755760408051602080820183526000825260808401919091528151908101909152600654600554829161113b9161112f90816064670de0b6b3a764000063ffffffff6120ce16565b9063ffffffff612a7416565b9052606082015260408051602080820183526005548252908352815180820183526006548152818401528151908101825260008152908201525b61117e81611f2c565b61119a5760405162461bcd60e51b81526004016105d790613434565b6000828152600d60209081526040918290208351518155908301515160018201558183015151600282015560608301515160038201556080830151516004909101555182907f56bf80dd437e71297b672f162543376a92b41bf544559c476d1f9c42089a66f49061120c908490613f42565b60405180910390a25050565b6040805160208082018352600554825282518082018452600654815283518083018552600754815284518084018652600854815285519384019095526009548352929390929185565b611269611fa8565b6001600160a01b031661127a6113f0565b6001600160a01b0316146112a05760405162461bcd60e51b81526004016105d790613aa1565b600a5460ff16156112c35760405162461bcd60e51b81526004016105d79061379a565b6001600160a01b0381166112e95760405162461bcd60e51b81526004016105d790613b2b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000611315611fa8565b6001600160a01b03166113266113f0565b6001600160a01b03161461134c5760405162461bcd60e51b81526004016105d790613aa1565b600a805460ff191683158015919091179091556113a6577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61138c611fa8565b60405161139991906133a5565b60405180910390a16113e5565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113cf611fa8565b6040516113dc91906133a5565b60405180910390a15b5050600a5460ff1690565b6001546001600160a01b031690565b611407611fa8565b6001600160a01b03166114186113f0565b6001600160a01b03161461143e5760405162461bcd60e51b81526004016105d790613aa1565b600a5460ff16156114615760405162461bcd60e51b81526004016105d79061379a565b61147a6000670de0b6b3a764000063ffffffff6120ce16565b815151108015906114a5575061149f6064670de0b6b3a764000063ffffffff6120ce16565b81515111155b6114c15760405162461bcd60e51b81526004016105d790613821565b6114da6000670de0b6b3a764000063ffffffff6120ce16565b6020820151511080159061150b57506115026064670de0b6b3a764000063ffffffff6120ce16565b60208201515111155b6115275760405162461bcd60e51b81526004016105d790613ad6565b6115406000670de0b6b3a764000063ffffffff6120ce16565b6040820151511080159061157157506115686064670de0b6b3a764000063ffffffff6120ce16565b60408201515111155b61158d5760405162461bcd60e51b81526004016105d790613653565b6115a66000670de0b6b3a764000063ffffffff6120ce16565b604082015151108015906115d757506115ce6064670de0b6b3a764000063ffffffff6120ce16565b60408201515111155b6115f35760405162461bcd60e51b81526004016105d790613e12565b61160c6000670de0b6b3a764000063ffffffff6120ce16565b6080820151511080159061163d57506116346064670de0b6b3a764000063ffffffff6120ce16565b60808201515111155b6116595760405162461bcd60e51b81526004016105d790613c1d565b805151600590815560208201515160065560408083015151600755606083015151600855608083015151600955517f1964e1b859b551afd911cd7a22a4955efc66d5734dd0343ba9cf28e41b5e11eb916116b29161402f565b60405180910390a150565b600454600160a01b900460ff1681565b6004546001600160a01b031681565b6116e4612ef6565b506000828152600c602090815260408083206001600160a01b03808616855290835292819020815160a0810183528154815260018201548516818501526002820154851681840152600382015490941660608501528151928301909152600401548152608082015292915050565b600a5460ff16156117755760405162461bcd60e51b81526004016105d79061379a565b6002546040516314d43c8d60e11b815282916001600160a01b0316906329a8791a906117a5908490600401614062565b602060405180830381600087803b1580156117bf57600080fd5b505af11580156117d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f79190613193565b6118135760405162461bcd60e51b81526004016105d790613dc3565b61182461181e611fa8565b83612108565b5050565b600061184560646118398486612a9c565b9063ffffffff612ab516565b9392505050565b600a5460ff161561186f5760405162461bcd60e51b81526004016105d79061379a565b6002546040516314d43c8d60e11b815283916001600160a01b0316906329a8791a9061189f908490600401614062565b602060405180830381600087803b1580156118b957600080fd5b505af11580156118cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f19190613193565b61190d5760405162461bcd60e51b81526004016105d790613dc3565b611915611fa8565b60025460405163430c208160e01b815285916001600160a01b03169063430c20819061194790859085906004016133b9565b602060405180830381600087803b15801561196157600080fd5b505af1158015611975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119999190613193565b6119b55760405162461bcd60e51b81526004016105d790613906565b6119bd612ef6565b6000868152600c602052604080822091906119de9060608901908901613025565b6001600160a01b0390811682526020808301939093526040918201600020825160a0810184528154815260018201548316818601526002820154831681850152600382015490921660608301528251938401909252600490910154825260808101919091528051909150611a645760405162461bcd60e51b81526004016105d7906138cf565b80518535148015611a995750611a806040860160208701613025565b6001600160a01b031681602001516001600160a01b0316145b8015611aad57506080818101515190860135145b8015611add5750611ac46080860160608701613025565b6001600160a01b031681606001516001600160a01b0316145b611af95760405162461bcd60e51b81526004016105d7906139cb565b611b0786826000015161059d565b611b235760405162461bcd60e51b81526004016105d79061347f565b610e69868260400151612435565b600a5460ff1615611b545760405162461bcd60e51b81526004016105d79061379a565b611b5c611fa8565b6002546001600160a01b03908116911614611b895760405162461bcd60e51b81526004016105d790613a02565b6118248282611fac565b611b9b611fa8565b6001600160a01b0316611bac6113f0565b6001600160a01b031614611bd25760405162461bcd60e51b81526004016105d790613aa1565b600a5460ff1615611bf55760405162461bcd60e51b81526004016105d79061379a565b6001600160a01b038116611c1b5760405162461bcd60e51b81526004016105d790613b2b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600a5460ff1615611c605760405162461bcd60e51b81526004016105d79061379a565b60005b81811015611d2a576002546001600160a01b031663430c2081611c84611fa8565b858585818110611c9057fe5b905060200201356040518363ffffffff1660e01b8152600401611cb49291906133b9565b602060405180830381600087803b158015611cce57600080fd5b505af1158015611ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d069190613193565b611d225760405162461bcd60e51b81526004016105d7906135cc565b600101611c63565b5060005b818110156108a957611d51838383818110611d4557fe5b90506020020135612060565b600101611d2e565b611d61611fa8565b6001600160a01b0316611d726113f0565b6001600160a01b031614611d985760405162461bcd60e51b81526004016105d790613aa1565b6001600160a01b038116611dbe5760405162461bcd60e51b81526004016105d7906134c6565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6000611e33611fa8565b6001600160a01b0316611e446113f0565b6001600160a01b031614611e6a5760405162461bcd60e51b81526004016105d790613aa1565b600a5460ff1615611e8d5760405162461bcd60e51b81526004016105d79061379a565b506004805460ff60a01b1916600160a01b9215158302179081905560ff9190041690565b611eb9612e93565b506000908152600d6020908152604091829020825160c081018452815460a082019081528152835180840185526001830154815281840152835180840185526002830154815281850152835180840185526003830154815260608201528351928301909352600401548152608082015290565b6000611f476064670de0b6b3a764000063ffffffff6120ce16565b602083015151835151608085015151606086015151604087015151611f7c949361063c9390928492839163ffffffff611f8316565b1492915050565b6000828201838110156118455760405162461bcd60e51b81526004016105d790613595565b3390565b8051611fca5760405162461bcd60e51b81526004016105d79061361c565b611fd882826000015161059d565b611ff45760405162461bcd60e51b81526004016105d79061354e565b6000828152600e60209081526040918290208351815590830151600190910180546001600160a01b0319166001600160a01b039092169190911790555182907ff7347cb9e91d8cbe995b51920ba5f92cbf84a9e09cbed3cd7a739fef4d1d07cf9061120c908490613f04565b807fbf58f6d6c7d7c6efc69e7444efa93ed26d7cdc0e82e12a37df96f36a367561df600e60008481526020019081526020016000206040516120a29190613f24565b60405180910390a26000908152600e6020526040812090815560010180546001600160a01b0319169055565b6000826120dd5750600061064f565b828202828482816120ea57fe5b04146118455760405162461bcd60e51b81526004016105d79061398a565b612110612ef6565b506000818152600c602090815260408083206001600160a01b03808716855290835292819020815160a0810183528154815260018201548516818501526002820154851681840152600382015490941660608501528151928301909152600401548152608082015280516121965760405162461bcd60e51b81526004016105d7906136b0565b817fcbebd567b8a5c57f63ec61dc46746aab28daff6bdd1f4a6a0a305c17fa5465c9826040516121c69190613f81565b60405180910390a26000828152600c602090815260408083206001600160a01b038716845282528083208381556001810180546001600160a01b031990811690915560028201805482169055600382018054909116905560040192909255908201518251918301516108a99290612ae7565b60006001600160a01b0382166122d5578234146122675760405162461bcd60e51b81526004016105d790613a39565b600a60019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156122b757600080fd5b505af11580156122cb573d6000803e3d6000fd5b505050505061242e565b6040516370a0823160e01b815282906000906001600160a01b038316906370a08231906123069030906004016133a5565b60206040518083038186803b15801561231e57600080fd5b505afa158015612332573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612356919061320c565b905061237b612363611fa8565b6001600160a01b03841690308863ffffffff612c0f16565b6040516370a0823160e01b81526000906001600160a01b038416906370a08231906123aa9030906004016133a5565b60206040518083038186803b1580156123c257600080fd5b505afa1580156123d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fa919061320c565b90508061240d838863ffffffff611f8316565b1461242a5760405162461bcd60e51b81526004016105d7906137c4565b5050505b5090919050565b61243d612ef6565b506000828152600c602090815260408083206001600160a01b03808616855290835292819020815160a081018352815481526001820154851681850152600282015485168184015260038201549094166060850152815192830190915260040154815260808201526124ad612e93565b6124b5612e93565b506000848152600d6020908152604091829020825160c081018452815460a082019081528152835180840185526001830154815281840152835180840185526002830154815281850152835180840185526003830154815260608201908152845193840190945260049091015482526080810191909152905151156125d2576002546040516331a9108f60e11b81526125d2916001600160a01b031690636352211e90612566908990600401614062565b60206040518083038186803b15801561257e57600080fd5b505afa158015612592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b69190613041565b6125c883606001518660000151611828565b8560200151612ae7565b604081015151156126715760025460405163e0fd045f60e01b8152612671916001600160a01b03169063e0fd045f9061260f908990600401614062565b60206040518083038186803b15801561262757600080fd5b505afa15801561263b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061265f9190613041565b6125c883604001518660000151611828565b60808101515115612710576002546040516304ec739360e51b8152612710916001600160a01b031690639d8e7260906126ae908990600401614062565b60206040518083038186803b1580156126c657600080fd5b505afa1580156126da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fe9190613041565b6125c883608001518660000151611828565b805151156127365760035481518451612736926001600160a01b0316916125c891611828565b602081015151156127625760045460208201518451612762926001600160a01b0316916125c891611828565b6002546060840151604051630f6b630f60e41b81526001600160a01b039092169163f6b630f0916127989189919060040161406b565b600060405180830381600087803b1580156127b257600080fd5b505af11580156127c6573d6000803e3d6000fd5b5050600454600160a01b900460ff1615915061281690505760408051602080820183526007548252908452815180820183526008548152848201528151908101825260095481529083015261282f565b8051825260208082015190830152604080820151908301525b60808084018051918401919091526040805160208082018352925151928401515184515192850151519193849361288393919261112f92909183918290816064670de0b6b3a764000063ffffffff6120ce16565b9052606083015261289382611f2c565b156128df576000858152600d6020908152604091829020845151815590840151516001820155908301515160028201556060830151516003820155608083015151600490910155612964565b6040805160208082018352600754825290845281518082018352600854815284820190815282518083018452600954815285840190815283518084018552600081526080870152835192830190935251518451519251519192839261295c929161112f918290816064670de0b6b3a764000063ffffffff6120ce16565b905260608301525b6000858152600d60209081526040808320855151815582860151516001808301919091558287015151600280840191909155606088015151600380850191909155608089015151600494850155600c86528487206001600160a01b038c16885290955283862086815591820180546001600160a01b0319908116909155908201805482169055938101805490941690935591909101919091555185907f56bf80dd437e71297b672f162543376a92b41bf544559c476d1f9c42089a66f490612a2d908490613f42565b60405180910390a2847fb6ef177c7a6f32b283a49b5e0463a39240cdaa278028dfb219480d050e8ee54c84604051612a659190613f81565b60405180910390a25050505050565b600082821115612a965760405162461bcd60e51b81526004016105d7906136f5565b50900390565b8051600090611845908490670de0b6b3a7640000612c67565b6000808211612ad65760405162461bcd60e51b81526004016105d79061372c565b818381612adf57fe5b049392505050565b6001600160a01b038116612bf557600a54604051632e1a7d4d60e01b81526101009091046001600160a01b031690632e1a7d4d90612b29908590600401614062565b600060405180830381600087803b158015612b4357600080fd5b505af1158015612b57573d6000803e3d6000fd5b50505050612b658383612c85565b612bf057600a60019054906101000a90046001600160a01b03166001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015612bb957600080fd5b505af1158015612bcd573d6000803e3d6000fd5b5050600a54612bf0935061010090046001600160a01b0316915085905084612cfc565b6108a9565b6108a96001600160a01b038216848463ffffffff612cfc16565b610f46846323b872dd60e01b858585604051602401612c30939291906133d2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612d1b565b6000612c7d82611839868663ffffffff6120ce16565b949350505050565b60408051600080825260208201928390529182916001600160a01b038616918591612caf91613389565b60006040518083038185875af1925050503d8060008114612cec576040519150601f19603f3d011682016040523d82523d6000602084013e612cf1565b606091505b509095945050505050565b6108a98363a9059cbb60e01b8484604051602401612c309291906133b9565b6060612d70826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612daa9092919063ffffffff16565b8051909150156108a95780806020019051810190612d8e9190613193565b6108a95760405162461bcd60e51b81526004016105d790613d42565b6060612c7d848460008585612dbe85612e54565b612dda5760405162461bcd60e51b81526004016105d790613c75565b60006060866001600160a01b03168587604051612df79190613389565b60006040518083038185875af1925050503d8060008114612e34576040519150601f19603f3d011682016040523d82523d6000602084013e612e39565b606091505b5091509150612e49828286612e5a565b979650505050505050565b3b151590565b60608315612e69575081611845565b825115612e795782518084602001fd5b8160405162461bcd60e51b81526004016105d79190613401565b6040518060a00160405280612ea6612f3c565b8152602001612eb3612f3c565b8152602001612ec0612f3c565b8152602001612ecd612f3c565b8152602001612eda612f3c565b905290565b604080518082019091526000808252602082015290565b6040518060a001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001612eda5b6040518060200160405280600081525090565b600060408284031215612f60578081fd5b612f6a6040614082565b9050813581526020820135612f7e816140f5565b602082015292915050565b600060a08284031215612f9a578081fd5b612fa460a0614082565b9050612fb08383613000565b8152612fbf8360208401613000565b6020820152612fd18360408401613000565b6040820152612fe38360608401613000565b6060820152612ff58360808401613000565b608082015292915050565b600060208284031215613011578081fd5b61301b6020614082565b9135825250919050565b600060208284031215613036578081fd5b8135611845816140f5565b600060208284031215613052578081fd5b8151611845816140f5565b6000806020838503121561306f578081fd5b823567ffffffffffffffff80821115613086578283fd5b81850186601f820112613097578384fd5b80359250818311156130a7578384fd5b86602080850283010111156130ba578384fd5b60200196919550909350505050565b600080606083850312156130db578182fd5b823567ffffffffffffffff8111156130f1578283fd5b80840185601f820112613102578384fd5b80359150613117613112836140a9565b614082565b808382526020808301925080840189828388028701011115613137578788fd5b8794505b8585101561315957803584526001949094019392810192810161313b565b5081965061316989828a01612f4f565b955050505050509250929050565b600060208284031215613188578081fd5b81356118458161410d565b6000602082840312156131a4578081fd5b81516118458161410d565b600060a082840312156131c0578081fd5b6118458383612f89565b600080604083850312156131dc578182fd5b6131e68484613000565b946020939093013593505050565b600060208284031215613205578081fd5b5035919050565b60006020828403121561321d578081fd5b5051919050565b60008060408385031215613236578182fd5b823591506020830135613248816140f5565b809150509250929050565b60008060608385031215613265578182fd5b823591506132768460208501612f4f565b90509250929050565b60008060c08385031215613291578182fd5b823591506132768460208501612f89565b60008082840360c08112156132b5578283fd5b8335925060a0601f19820112156132ca578182fd5b506020830190509250929050565b60008082840360c08112156132eb578283fd5b8335925060a0601f1982011215613300578182fd5b5061330b60a0614082565b602084013581526040840135613320816140f5565b60208201526060840135613333816140f5565b60408201526080840135613346816140f5565b60608201526133588560a08601613000565b6080820152809150509250929050565b6000806040838503121561337a578182fd5b50508035926020909101359150565b6000825161339b8184602087016140c9565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b60006020825282518060208401526134208160408501602087016140c9565b601f01601f19169190910160400192915050565b6020808252602b908201527f4d61726b65743a20496e76616c696420626964207368617265732c206d75737460408201526a02073756d20746f203130360ac1b606082015260800190565b60208082526027908201527f4d61726b65743a2042696420696e76616c696420666f722073686172652073706040820152666c697474696e6760c81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f4d61726b65743a206269646465722063616e6e6f742062652030206164647265604082015261737360f01b606082015260800190565b60208082526027908201527f4d61726b65743a2041736b20696e76616c696420666f722073686172652073706040820152666c697474696e6760c81b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526030908201527f4d61726b65743a2072656d6f766541736b466f724261746368204f6e6c79206160408201526f38383937bb32b21037b91037bbb732b960811b606082015260800190565b6020808252601b908201527f4d61726b65743a2041736b206e6565647320746f206265203e20300000000000604082015260600190565b6020808252603f908201527f4d61726b65743a206675727468657253616c65734375744d61696e74656e616e60408201527f6365206e65656420746f206265206265747765656e203020616e642031303000606082015260800190565b60208082526025908201527f4d61726b65743a2063616e6e6f742072656d6f76652062696420616d6f756e746040820152640206f6620360dc1b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601e908201527f4d61726b65743a2063616e6e6f742062696420616d6f756e74206f6620300000604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252603c908201527f4d61726b65743a20546f6b656e207472616e736665722063616c6c206469642060408201527f6e6f74207472616e7366657220657870656374656420616d6f756e7400000000606082015260800190565b6020808252603c908201527f4d61726b65743a20666972737453616c654375744d61696e74656e616e63652060408201527f6e65656420746f206265206265747765656e203020616e642031303000000000606082015260800190565b60208082526031908201527f4d61726b65743a2053656c6c206f6e2066656520696e76616c696420666f722060408201527039b430b9329039b83634ba3a34b733901960791b606082015260800190565b6020808252601e908201527f4d61726b65743a2063616e6e6f742061636365707420626964206f6620300000604082015260600190565b6020808252601e908201527f4d61726b65743a204f6e6c7920617070726f766564206f72206f776e65720000604082015260600190565b6020808252602d908201527f4d61726b65743a204f6e6c79206d656469612063616c6c65722c20617070726f60408201526c3b32b2161037b91037bbb732b960991b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601d908201527f4d61726b65743a20556e65787065637465642062696420666f756e642e000000604082015260600190565b6020808252601b908201527f4d61726b65743a204f6e6c79206d6564696120636f6e74726163740000000000604082015260600190565b60208082526042908201527f4d61726b65743a2053656e74204e617469766520436f696e2056616c7565206460408201527f6f6573206e6f74206d61746368207370656369666965642062696420616d6f756060820152611b9d60f21b608082015260a00190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526035908201527f4d61726b65743a20666972737453616c65437574506f6f6c206e65656420746f6040820152740206265206265747765656e203020616e642031303605c1b606082015260800190565b6020808252603a908201527f4d61726b65743a2063616e6e6f742073657420706c6174666f726d2077616c6c60408201527f65742061646472657373206173207a65726f2061646472657373000000000000606082015260800190565b60208082526031908201527f4d61726b65743a2053656c6c206f6e2066656520696e76616c696420666f722060408201527073686172652073706c697474696e67203160781b606082015260800190565b60208082526024908201527f4d61726b65743a20496e76616c6964206269642073686172657320666f72207460408201526337b5b2b760e11b606082015260800190565b60208082526038908201527f4d61726b65743a206675727468657253616c657343726561746f72206e656564604082015277020746f206265206265747765656e203020616e64203130360441b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602d908201527f4d61726b65743a2073657441736b466f724261746368204f6e6c79206170707260408201526c37bb32b21037b91037bbb732b960991b606082015260800190565b60208082526029908201527f4d61726b65743a2062696420726563697069656e742063616e6e6f742062652060408201526830206164647265737360b81b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602f908201527f4d61726b65743a20746f6b656e2077697468207468617420696420686173206e60408201526e1bdd081899595b8818dc99585d1959608a1b606082015260800190565b60208082526038908201527f4d61726b65743a206675727468657253616c6573437574506f6f6c206e656564604082015277020746f206265206265747765656e203020616e64203130360441b606082015260800190565b60208082526029908201527f4d61726b65743a20626964646572206e6565647320746f206265206d6573736160408201526833b29039b2b73232b960b91b606082015260800190565b60208082526031908201527f4d61726b65743a2063616e6e6f7420736574206d6564696120636f6e7472616360408201527074206173207a65726f206164647265737360781b606082015260800190565b815181526020918201516001600160a01b03169181019190915260400190565b815481526001909101546001600160a01b0316602082015260400190565b600060a0820190508251518252602083015151602083015260408301515160408301526060830151516060830152608083015151608083015292915050565b815181526020808301516001600160a01b039081169183019190915260408084015182169083015260608084015190911690820152608091820151519181019190915260a00190565b8154815260018201546001600160a01b0390811660208301526002830154811660408301526003830154166060820152600490910154608082015260a00190565b94518552925160208501529051604084015251606083015251608082015260a00190565b81548152600182015460208201526002820154604082015260038201546060820152600490910154608082015260a00190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60405181810167ffffffffffffffff811182821017156140a157600080fd5b604052919050565b600067ffffffffffffffff8211156140bf578081fd5b5060209081020190565b60005b838110156140e45781810151838201526020016140cc565b83811115610f465750506000910152565b6001600160a01b038116811461410a57600080fd5b50565b801515811461410a57600080fdfea264697066735822122041cc6aa5bb9b4d8fc5ad05c7f0d5d88ac6a1c2d982097d6e59738c0d6143128464736f6c63430006080033";
