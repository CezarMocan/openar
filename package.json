{
  "name": "openar",
  "description": "OpenAR Platform Monorepo",
  "private": true,
  "contributors": [
    {
      "name": "Vincent Van Uffelen"
    }
  ],
  "license": "MIT",
  "scripts": {
    "lint": "npm run app:api:lint && npm run app:dapp:lint",
    "start:api": "npm run app:api:start",
    "start:dapp": "npm run app:dapp:start",
    "dev": "concurrently -k -p \"[{name}]\" -n \"API,DAPP\" -c \"#f41788,#c8b320\" \"npm run app:api:dev\" \"npm run app:dapp:dev\"",
    "dev:dapp": "npm run dev -w dapp",
    "dev:api": "npm run app:api:dev",
    "build:api": "NODE_ENV=production npm run app:api:build",
    "app:api:dev": "concurrently -k -p \"[{name}]\" -n \"BABEL,NODE,TS\" -c \"#d531f5,#4d5ffa,#09e3b4\" \"npm run app:api:dev:watch:babel\" \"sleep 5 && npm run app:api:dev:watch:nodemon\" \"sleep 5 && npm run app:api:dev:watch:typings\"",
    "app:api:dev:watch:babel": "NODE_ENV=development babel ./apps/api/src --watch --out-dir ./apps/api/build --extensions .ts",
    "app:api:dev:watch:nodemon": "NODE_ENV=development env-cmd -f ./.env nodemon --watch ./apps/api/build ./apps/api/build/index.js",
    "app:api:dev:watch:typings": "NODE_ENV=development tsc ./apps/api/src/*.ts --target 'es2018' --moduleResolution 'node' --watch --declaration --esModuleInterop --noEmit --preserveWatchOutput",
    "app:api:build": "NODE_ENV=production rimraf ./apps/api/build && npm run app:api:babel",
    "app:api:deploy": "NODE_ENV=production rimraf ./apps/api/build && rimraf ./apps/api/x && npm run app:api:babel && mv ./apps/api/live ./apps/api/x && mv ./apps/api/build ./apps/api/live && rimraf ./apps/api/x && openar_api_restart",
    "app:api:start:build": "NODE_ENV=production node ./apps/api/build/index.js",
    "app:api:start": "NODE_ENV=production node ./apps/api/live/index.js",
    "app:api:babel": "NODE_ENV=production babel ./apps/api/src --out-dir ./apps/api/build --extensions .ts",
    "app:api:lint": "eslint ./apps/api/src --ext .js,.ts --ignore-pattern nexus-typegen.ts",
    "app:api:nexus": "node --loader ts-node/esm --experimental-specifier-resolution=node ./apps/api/src/nexus-graphql/schema.ts",
    "app:api:db:push": "prisma db push",
    "app:api:db:migrate": "prisma migrate deploy",
    "app:api:db:generate": "prisma generate",
    "app:api:db:studio": "prisma studio",
    "app:api:db:seed": "node ./apps/api/build/db/seeds/resetdb.js",
    "app:api:db:dev:seed": "NODE_ENV=development dotenv -e .env -- node --loader ts-node/esm ./apps/api/src/db/seeds/resetdb.ts",
    "app:dapp:start": "NODE_END=production npm run start -w dapp",
    "app:dapp:build": "NODE_END=production npm run build -w dapp && mv ./apps/dapp/.next ./apps/dapp/x && mv ./apps/dapp/build ./apps/dapp/.next && rimraf ./apps/dapp/x && openar_dapp_restart",
    "app:dapp:dev": "PORT=$(grep DEV_DAPP_PORT .env | cut -d '=' -f2) NEXT_PUBLIC_API_URL=$(grep '^BASE_URL_API' .env | cut -d '=' -f2) npm run dev -w dapp",
    "app:dapp:lint": "npm run lint -w dapp"
  },
  "lint-staged": {
    "packages/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
      "prettier --write"
    ]
  },
  "devEngines": {
    "node": "^16.x"
  },
  "devDependencies": {
    "@babel/cli": "^7.14.8",
    "@babel/core": "^7.15.0",
    "@babel/preset-env": "^7.15.0",
    "@babel/preset-typescript": "^7.15.0",
    "@typescript-eslint/eslint-plugin": "^4.29.2",
    "babel-plugin-add-import-extension": "^1.6.0",
    "concurrently": "^6.2.0",
    "dotenv-cli": "^4.0.0",
    "env-cmd": "^10.1.0",
    "eslint": "^7.29.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-airbnb-typescript": "^12.3.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-jest": "^24.4.0",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-plugin-security": "^1.4.0",
    "jest": "^27.0.6",
    "nodemon": "^2.0.9",
    "prettier": "^2.3.2",
    "prisma": "^2.29.1",
    "rimraf": "^3.0.2",
    "ts-node": "^10.2.1",
    "typescript": "^4.3.5"
  },
  "workspaces": [
    "apps/*"
  ],
  "dependencies": {
    "dotenv": "^10.0.0",
    "gray-matter": "^4.0.3",
    "raw-loader": "^4.0.2",
    "react-markdown": "^7.0.1"
  },
  "prisma": {
    "schema": "./apps/api/prisma/schema.prisma"
  }
}
